<<<<<<< HEAD
{"version":3,"file":"TagFilter.astro_astro_type_script_index_0_lang.DaVA0TjB.js","sources":["../../src/features/blog/tagFiltering.ts","../../src/components/blog/TagFilter.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["/**\n * Initializes tag filtering functionality on the blog page.\n * It finds all tag filter buttons and post items, then adds event listeners\n * to filter posts based on the selected tag.\n */\nexport function initializeTagFiltering(): void {\n  const tagFilters = document.querySelectorAll<HTMLButtonElement>(\".tag-filter\");\n  const postItems = document.querySelectorAll<HTMLElement>(\".post-item\");\n\n  if (!tagFilters.length || !postItems.length) {\n    return; // No filters or posts to work with\n  }\n\n  tagFilters.forEach((filter) => {\n    filter.addEventListener(\"click\", () => {\n      const selectedTag = filter.getAttribute(\"data-tag\");\n\n      // Update active filter styles\n      tagFilters.forEach((f) => {\n        f.classList.remove(\"active\", \"bg-primary-600\", \"text-white\");\n        f.classList.add(\n          \"border-gray-300\",\n          \"dark:border-gray-600\",\n          \"text-gray-700\",\n          \"dark:text-gray-300\"\n        );\n      });\n\n      filter.classList.add(\"active\", \"bg-primary-600\", \"text-white\");\n      filter.classList.remove(\n        \"border-gray-300\",\n        \"dark:border-gray-600\",\n        \"text-gray-700\",\n        \"dark:text-gray-300\"\n      );\n\n      // Filter posts\n      postItems.forEach((item) => {\n        const postTagsRaw = item.getAttribute(\"data-tags\");\n        if (postTagsRaw) {\n          try {\n            const postTags: string[] = JSON.parse(postTagsRaw);\n            const shouldShow =\n              selectedTag === \"all\" || (selectedTag && postTags.includes(selectedTag));\n\n            if (shouldShow) {\n              item.style.display = \"block\";\n              item.classList.add(\"animate-fade-in\");\n            } else {\n              item.style.display = \"none\";\n              item.classList.remove(\"animate-fade-in\");\n            }\n          } catch (e) {\n            console.error(\"Failed to parse post tags:\", postTagsRaw, e);\n            // Optionally hide the item or show an error state\n            item.style.display = \"none\";\n          }\n        } else {\n          // If data-tags is missing, hide the item by default or handle as an error\n          item.style.display = \"none\";\n        }\n      });\n    });\n  });\n}\n","  import { initializeTagFiltering } from \"@/features/blog/tagFiltering\";\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    initializeTagFiltering();\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyAidmVyc2lvbiI6IDMsICJzb3VyY2VzIjogWyIvVm9sdW1lcy9EQVRBL0FzdHJvL2FzdHJvLWJhdGF2aWEvc3JjL2NvbXBvbmVudHMvYmxvZy9UYWdGaWx0ZXIuYXN0cm8iXSwgInNvdXJjZXNDb250ZW50IjogWyItLS1cbmludGVyZmFjZSBQcm9wcyB7XG4gIHRhZ3M6IHN0cmluZ1tdO1xufVxuXG5jb25zdCB7IHRhZ3MgfSA9IEFzdHJvLnByb3BzO1xuLS0tXG5cbntcbiAgdGFncy5sZW5ndGggXHUwMDNlIDAgXHUwMDI2XHUwMDI2IChcbiAgICBcdTAwM2NkaXYgY2xhc3M9XCJtYi04XCJcdTAwM2VcbiAgICAgIFx1MDAzY2gyIGNsYXNzPVwidGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtZ3JheS05MDAgZGFyazp0ZXh0LWdyYXktMTAwIG1iLTRcIlx1MDAzZVxuICAgICAgICBCcm93c2UgYnkgVG9waWNcbiAgICAgIFx1MDAzYy9oMlx1MDAzZVxuICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZmxleCBmbGV4LXdyYXAgZ2FwLTJcIlx1MDAzZVxuICAgICAgICBcdTAwM2NidXR0b25cbiAgICAgICAgICBjbGFzcz1cInRhZy1maWx0ZXIgYWN0aXZlIHB4LTQgcHktMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJvdW5kZWQtZnVsbCBib3JkZXIgYm9yZGVyLXByaW1hcnktNjAwIGJnLXByaW1hcnktNjAwIHRleHQtd2hpdGUgaG92ZXI6YmctcHJpbWFyeS03MDAgdHJhbnNpdGlvbi1jb2xvcnMgZHVyYXRpb24tMjAwXCJcbiAgICAgICAgICBkYXRhLXRhZz1cImFsbFwiXHUwMDNlXG4gICAgICAgICAgQWxsXG4gICAgICAgIFx1MDAzYy9idXR0b25cdTAwM2VcbiAgICAgICAge3RhZ3MubWFwKCh0YWcpID1cdTAwM2UgKFxuICAgICAgICAgIFx1MDAzY2J1dHRvblxuICAgICAgICAgICAgY2xhc3M9XCJ0YWctZmlsdGVyIHB4LTQgcHktMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJvdW5kZWQtZnVsbCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIGRhcms6Ym9yZGVyLWdyYXktNjAwIHRleHQtZ3JheS03MDAgZGFyazp0ZXh0LWdyYXktMzAwIGhvdmVyOmJvcmRlci1wcmltYXJ5LTYwMCBob3Zlcjp0ZXh0LXByaW1hcnktNjAwIGRhcms6aG92ZXI6dGV4dC1wcmltYXJ5LTQwMCB0cmFuc2l0aW9uLWNvbG9ycyBkdXJhdGlvbi0yMDBcIlxuICAgICAgICAgICAgZGF0YS10YWc9e3RhZ31cdTAwM2VcbiAgICAgICAgICAgICN7dGFnfVxuICAgICAgICAgIFx1MDAzYy9idXR0b25cdTAwM2VcbiAgICAgICAgKSl9XG4gICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgXHUwMDNjL2Rpdlx1MDAzZVxuICApXG59XG5cblx1MDAzY3NjcmlwdFx1MDAzZVxuICBpbXBvcnQgeyBpbml0aWFsaXplVGFnRmlsdGVyaW5nIH0gZnJvbSBcIkAvZmVhdHVyZXMvYmxvZy90YWdGaWx0ZXJpbmdcIjtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPVx1MDAzZSB7XG4gICAgaW5pdGlhbGl6ZVRhZ0ZpbHRlcmluZygpO1xuICB9KTtcblx1MDAzYy9zY3JpcHRcdTAwM2UiXSwgIm1hcHBpbmdzIjogIkFBaUNBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDdEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QixFQUFFLENBQUMsQ0FBQztBQUFBOyIsICJuYW1lcyI6IFtdIH0="],"names":["initializeTagFiltering","tagFilters","postItems","filter","selectedTag","f","item","postTagsRaw","postTags","e"],"mappings":"+YAKO,SAASA,GAA+B,CAC7C,MAAMC,EAAa,SAAS,iBAAoC,aAAa,EACvEC,EAAY,SAAS,iBAA8B,YAAY,EAEjE,CAACD,EAAW,QAAU,CAACC,EAAU,QAIrCD,EAAW,QAASE,GAAW,CAC7BA,EAAO,iBAAiB,QAAS,IAAM,CACrC,MAAMC,EAAcD,EAAO,aAAa,UAAU,EAGlDF,EAAW,QAASI,GAAM,CACxBA,EAAE,UAAU,OAAO,SAAU,iBAAkB,YAAY,EAC3DA,EAAE,UAAU,IACV,kBACA,uBACA,gBACA,oBAAA,CACF,CACD,EAEDF,EAAO,UAAU,IAAI,SAAU,iBAAkB,YAAY,EAC7DA,EAAO,UAAU,OACf,kBACA,uBACA,gBACA,oBAAA,EAIFD,EAAU,QAASI,GAAS,CAC1B,MAAMC,EAAcD,EAAK,aAAa,WAAW,EACjD,GAAIC,EACF,GAAI,CACF,MAAMC,EAAqB,KAAK,MAAMD,CAAW,EAE/CH,IAAgB,OAAUA,GAAeI,EAAS,SAASJ,CAAW,GAGtEE,EAAK,MAAM,QAAU,QACrBA,EAAK,UAAU,IAAI,iBAAiB,IAEpCA,EAAK,MAAM,QAAU,OACrBA,EAAK,UAAU,OAAO,iBAAiB,EACzC,OACOG,EAAG,CACV,QAAQ,MAAM,6BAA8BF,EAAaE,CAAC,EAE1DH,EAAK,MAAM,QAAU,MAAA,MAIvBA,EAAK,MAAM,QAAU,MACvB,CACD,CAAA,CACF,CAAA,CACF,CACH,CC9BE,SAAS,iBAAiB,mBAAoB,IAAM,CAClDN,EAAA,CACF,CAAC"}
=======
{"version":3,"file":"TagFilter.astro_astro_type_script_index_0_lang.DaVA0TjB.js","sources":["../../src/features/blog/tagFiltering.ts","../../src/components/blog/TagFilter.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["/**\n * Initializes tag filtering functionality on the blog page.\n * It finds all tag filter buttons and post items, then adds event listeners\n * to filter posts based on the selected tag.\n */\nexport function initializeTagFiltering(): void {\n  const tagFilters = document.querySelectorAll<HTMLButtonElement>(\".tag-filter\");\n  const postItems = document.querySelectorAll<HTMLElement>(\".post-item\");\n\n  if (!tagFilters.length || !postItems.length) {\n    return; // No filters or posts to work with\n  }\n\n  tagFilters.forEach((filter) => {\n    filter.addEventListener(\"click\", () => {\n      const selectedTag = filter.getAttribute(\"data-tag\");\n\n      // Update active filter styles\n      tagFilters.forEach((f) => {\n        f.classList.remove(\"active\", \"bg-primary-600\", \"text-white\");\n        f.classList.add(\n          \"border-gray-300\",\n          \"dark:border-gray-600\",\n          \"text-gray-700\",\n          \"dark:text-gray-300\"\n        );\n      });\n\n      filter.classList.add(\"active\", \"bg-primary-600\", \"text-white\");\n      filter.classList.remove(\n        \"border-gray-300\",\n        \"dark:border-gray-600\",\n        \"text-gray-700\",\n        \"dark:text-gray-300\"\n      );\n\n      // Filter posts\n      postItems.forEach((item) => {\n        const postTagsRaw = item.getAttribute(\"data-tags\");\n        if (postTagsRaw) {\n          try {\n            const postTags: string[] = JSON.parse(postTagsRaw);\n            const shouldShow =\n              selectedTag === \"all\" || (selectedTag && postTags.includes(selectedTag));\n\n            if (shouldShow) {\n              item.style.display = \"block\";\n              item.classList.add(\"animate-fade-in\");\n            } else {\n              item.style.display = \"none\";\n              item.classList.remove(\"animate-fade-in\");\n            }\n          } catch (e) {\n            console.error(\"Failed to parse post tags:\", postTagsRaw, e);\n            // Optionally hide the item or show an error state\n            item.style.display = \"none\";\n          }\n        } else {\n          // If data-tags is missing, hide the item by default or handle as an error\n          item.style.display = \"none\";\n        }\n      });\n    });\n  });\n}\n","  import { initializeTagFiltering } from \"@/features/blog/tagFiltering\";\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    initializeTagFiltering();\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyAidmVyc2lvbiI6IDMsICJzb3VyY2VzIjogWyIvVm9sdW1lcy9EQVRBL0FzdHJvL0FzdHJvQmxhemVDTVMvc3JjL2NvbXBvbmVudHMvYmxvZy9UYWdGaWx0ZXIuYXN0cm8iXSwgInNvdXJjZXNDb250ZW50IjogWyItLS1cbmludGVyZmFjZSBQcm9wcyB7XG4gIHRhZ3M6IHN0cmluZ1tdO1xufVxuXG5jb25zdCB7IHRhZ3MgfSA9IEFzdHJvLnByb3BzO1xuLS0tXG5cbntcbiAgdGFncy5sZW5ndGggXHUwMDNlIDAgXHUwMDI2XHUwMDI2IChcbiAgICBcdTAwM2NkaXYgY2xhc3M9XCJtYi04XCJcdTAwM2VcbiAgICAgIFx1MDAzY2gyIGNsYXNzPVwidGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtZ3JheS05MDAgZGFyazp0ZXh0LWdyYXktMTAwIG1iLTRcIlx1MDAzZVxuICAgICAgICBCcm93c2UgYnkgVG9waWNcbiAgICAgIFx1MDAzYy9oMlx1MDAzZVxuICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZmxleCBmbGV4LXdyYXAgZ2FwLTJcIlx1MDAzZVxuICAgICAgICBcdTAwM2NidXR0b25cbiAgICAgICAgICBjbGFzcz1cInRhZy1maWx0ZXIgYWN0aXZlIHB4LTQgcHktMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJvdW5kZWQtZnVsbCBib3JkZXIgYm9yZGVyLXByaW1hcnktNjAwIGJnLXByaW1hcnktNjAwIHRleHQtd2hpdGUgaG92ZXI6YmctcHJpbWFyeS03MDAgdHJhbnNpdGlvbi1jb2xvcnMgZHVyYXRpb24tMjAwXCJcbiAgICAgICAgICBkYXRhLXRhZz1cImFsbFwiXHUwMDNlXG4gICAgICAgICAgQWxsXG4gICAgICAgIFx1MDAzYy9idXR0b25cdTAwM2VcbiAgICAgICAge3RhZ3MubWFwKCh0YWcpID1cdTAwM2UgKFxuICAgICAgICAgIFx1MDAzY2J1dHRvblxuICAgICAgICAgICAgY2xhc3M9XCJ0YWctZmlsdGVyIHB4LTQgcHktMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJvdW5kZWQtZnVsbCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIGRhcms6Ym9yZGVyLWdyYXktNjAwIHRleHQtZ3JheS03MDAgZGFyazp0ZXh0LWdyYXktMzAwIGhvdmVyOmJvcmRlci1wcmltYXJ5LTYwMCBob3Zlcjp0ZXh0LXByaW1hcnktNjAwIGRhcms6aG92ZXI6dGV4dC1wcmltYXJ5LTQwMCB0cmFuc2l0aW9uLWNvbG9ycyBkdXJhdGlvbi0yMDBcIlxuICAgICAgICAgICAgZGF0YS10YWc9e3RhZ31cdTAwM2VcbiAgICAgICAgICAgICN7dGFnfVxuICAgICAgICAgIFx1MDAzYy9idXR0b25cdTAwM2VcbiAgICAgICAgKSl9XG4gICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgXHUwMDNjL2Rpdlx1MDAzZVxuICApXG59XG5cblx1MDAzY3NjcmlwdFx1MDAzZVxuICBpbXBvcnQgeyBpbml0aWFsaXplVGFnRmlsdGVyaW5nIH0gZnJvbSBcIkAvZmVhdHVyZXMvYmxvZy90YWdGaWx0ZXJpbmdcIjtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPVx1MDAzZSB7XG4gICAgaW5pdGlhbGl6ZVRhZ0ZpbHRlcmluZygpO1xuICB9KTtcblx1MDAzYy9zY3JpcHRcdTAwM2UiXSwgIm1hcHBpbmdzIjogIkFBaUNBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDdEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QixFQUFFLENBQUMsQ0FBQztBQUFBOyIsICJuYW1lcyI6IFtdIH0="],"names":["initializeTagFiltering","tagFilters","postItems","filter","selectedTag","f","item","postTagsRaw","postTags","e"],"mappings":"+YAKO,SAASA,GAA+B,CACvC,MAAAC,EAAa,SAAS,iBAAoC,aAAa,EACvEC,EAAY,SAAS,iBAA8B,YAAY,EAEjE,CAACD,EAAW,QAAU,CAACC,EAAU,QAI1BD,EAAA,QAASE,GAAW,CACtBA,EAAA,iBAAiB,QAAS,IAAM,CAC/B,MAAAC,EAAcD,EAAO,aAAa,UAAU,EAGvCF,EAAA,QAASI,GAAM,CACxBA,EAAE,UAAU,OAAO,SAAU,iBAAkB,YAAY,EAC3DA,EAAE,UAAU,IACV,kBACA,uBACA,gBACA,oBACF,CAAA,CACD,EAEDF,EAAO,UAAU,IAAI,SAAU,iBAAkB,YAAY,EAC7DA,EAAO,UAAU,OACf,kBACA,uBACA,gBACA,oBACF,EAGUD,EAAA,QAASI,GAAS,CACpB,MAAAC,EAAcD,EAAK,aAAa,WAAW,EACjD,GAAIC,EACE,GAAA,CACI,MAAAC,EAAqB,KAAK,MAAMD,CAAW,EAE/CH,IAAgB,OAAUA,GAAeI,EAAS,SAASJ,CAAW,GAGtEE,EAAK,MAAM,QAAU,QAChBA,EAAA,UAAU,IAAI,iBAAiB,IAEpCA,EAAK,MAAM,QAAU,OAChBA,EAAA,UAAU,OAAO,iBAAiB,SAElCG,EAAG,CACF,QAAA,MAAM,6BAA8BF,EAAaE,CAAC,EAE1DH,EAAK,MAAM,QAAU,MAAA,MAIvBA,EAAK,MAAM,QAAU,MACvB,CACD,CAAA,CACF,CAAA,CACF,CACH,CC9BE,SAAS,iBAAiB,mBAAoB,IAAM,CAC3BN,EAAA,CACzB,CAAC"}
>>>>>>> origin/main
