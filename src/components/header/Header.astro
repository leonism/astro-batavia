---
import { getLangFromUrl } from "@/i18n/utils";
import type { LanguageKey } from "@/i18n/types";
import SearchBox from "@/components/ui/SearchBox.astro";
import HeaderLogo from "./HeaderLogo.astro";
import HeaderNavLinks from "./HeaderNavLinks.astro";
import HeaderUtilities from "./HeaderUtilities.astro";

const lang = getLangFromUrl(Astro.url) as LanguageKey;
const currentPath = Astro.url.pathname;
---

<header
  class="fixed top-0 z-50 w-full bg-white/80 dark:bg-slate-900/80 backdrop-blur-xl border-b border-slate-200/50 dark:border-slate-700/50"
>
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <HeaderLogo lang={lang} />

      {/* Desktop Navigation */}
      <div class="hidden md:flex items-center space-x-8">
        <HeaderNavLinks lang={lang} currentPath={currentPath} variant="desktop" />
      </div>

      {/* Search Box (Desktop) - Placed between nav and utilities for some layouts */}
      <div class="hidden lg:block">
        <SearchBox />
      </div>

      <HeaderUtilities />
    </div>

    {/* Mobile Navigation */}
    <div id="mobile-menu" class="md:hidden hidden pb-4">
      <div class="flex flex-col space-y-2">
        <HeaderNavLinks lang={lang} currentPath={currentPath} variant="mobile" />
        {/* Mobile Search */}
        <div class="pt-2">
          <SearchBox />
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
      });

      // Close mobile menu when clicking outside
      document.addEventListener("click", (e) => {
        const target = e.target as Node;
        if (
          mobileMenuButton && !mobileMenuButton.contains(target) &&
          mobileMenu && !mobileMenu.contains(target)
        ) {
          mobileMenu.classList.add("hidden");
        }
      });
    }
  });
</script>
