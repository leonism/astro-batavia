---
interface Props {
  title?: string;
  subtitle?: string;
  emailPlaceholder?: string;
  buttonText?: string;
  formAction?: string;
  formMethod?: string;
  showPrivacyNote?: boolean;
  privacyNoteText?: string;

  // Styling props
  sectionClass?: string;
  containerClass?: string;
  titleClass?: string;
  subtitleClass?: string;
  formClass?: string;
  inputClass?: string;
  buttonClass?: string;
  privacyNoteClass?: string;
}

const {
  title,
  subtitle,
  emailPlaceholder = "Enter your email",
  buttonText = "Subscribe",
  formAction = "#", // Default action, can be overridden
  formMethod = "POST",
  showPrivacyNote = false,
  privacyNoteText,
  sectionClass = "py-16",
  containerClass = "max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center",
  titleClass = "text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4",
  subtitleClass = "text-xl text-gray-600 dark:text-gray-300 mb-8",
  formClass = "flex flex-col sm:flex-row gap-4 max-w-md mx-auto",
  inputClass = "flex-1 px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 dark:focus:ring-primary-400 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100",
  buttonClass = "px-6 py-3 bg-primary-600 text-white font-medium rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-all duration-200",
  privacyNoteClass = "text-sm text-gray-500 dark:text-gray-400 mt-4",
  ...rest
} = Astro.props;
---

<section
  class:list={[sectionClass]}
  {...rest}>
  <div class:list={[containerClass]}>
    {
      title && (
        <h2
          class:list={[titleClass]}
          set:html={title}
        />
      )
    }
    {
      subtitle && (
        <p
          class:list={[subtitleClass]}
          set:html={subtitle}
        />
      )
    }

    <form
      action={formAction}
      method={formMethod}
      class:list={[formClass]}>
      <input
        type="email"
        name="email"
        placeholder={emailPlaceholder}
        class:list={[inputClass]}
        required
      />
      <button
        type="submit"
        class:list={[buttonClass]}>
        {buttonText}
      </button>
    </form>

    {
      showPrivacyNote && privacyNoteText && (
        <p
          class:list={[privacyNoteClass]}
          set:html={privacyNoteText}
        />
      )
    }
  </div>
</section>
