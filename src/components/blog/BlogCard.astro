---
import type { CollectionEntry } from "astro:content";
import { formatDate, useTranslations } from "@/i18n/utils";
import type { ui } from "@/i18n/ui";

export interface Props {
  post: CollectionEntry<"blog">;
  lang: keyof typeof ui | string;
  showExcerpt?: boolean;
  isFeatured?: boolean;
}

const { post, lang, showExcerpt = true, isFeatured = false } = Astro.props;
const t = useTranslations(lang as keyof typeof ui);
const postUrl = `/${post.slug}`;

const excerpt = showExcerpt
  ? post.data.description || post.body.slice(0, isFeatured ? 300 : 150) + "..."
  : "";

const articleClasses = [
  "group bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden transition-all duration-300 flex flex-col",
  isFeatured ? "md:flex-row md:shadow-xl md:hover:shadow-2xl md:min-h-[400px]" : "hover:shadow-lg hover:scale-[1.02] min-h-[420px] max-h-[480px]",
].join(" ");

const imageContainerClasses = [
  "overflow-hidden",
  isFeatured ? "md:w-1/2 md:aspect-auto h-96 md:h-full" : "h-52",
].join(" ");

const imageClasses = [
  "w-full h-full object-cover group-hover:scale-105 transition-transform duration-300",
  isFeatured ? "md:rounded-l-lg md:rounded-r-none" : "",
].join(" ");

const contentClasses = [
  "p-6 flex-1 flex flex-col",
  isFeatured ? "md:w-1/2 md:justify-center" : "",
].join(" ");

const titleClasses = [
  "font-semibold mb-2 text-gray-900 dark:text-gray-100 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-200 line-clamp-2",
  isFeatured ? "text-2xl md:text-3xl" : "text-xl",
].join(" ");

const excerptClasses = [
  "text-gray-600 dark:text-gray-300 leading-relaxed mb-4",
  isFeatured ? "text-base line-clamp-4" : "text-sm line-clamp-3",
].join(" ");
---

<article class={articleClasses} aria-labelledby={`blog-post-title-${post.id}`}>
  {post.data.heroImage && (
    <div class={imageContainerClasses}>
      <a href={postUrl} tabindex="-1" aria-hidden="true">
        <img
          src={post.data.heroImage}
          alt={post.data.heroAlt || post.data.title}
          width={600}
          height={400}
          class={imageClasses}
          loading={isFeatured ? "eager" : "lazy"}
          decoding={isFeatured ? "auto" : "async"}
        />
      </a>
    </div>
  )}

  <div class={contentClasses}>
    {post.data.tags && post.data.tags.length > 0 && (
      <div class={`flex flex-wrap gap-2 mb-3 ${isFeatured ? "md:mb-4" : ""}`}>
        {post.data.tags.slice(0, 3).map((tag: string) => (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200">
            #{tag}
          </span>
        ))}
        {post.data.tags.length > 3 && (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300">
            +{post.data.tags.length - 3}
          </span>
        )}
      </div>
    )}

    <h2 class={titleClasses} id={`blog-post-title-${post.id}`}>
      <a href={postUrl} class="stretched-link">
        {post.data.title}
      </a>
    </h2>

    {showExcerpt && excerpt && <p class={excerptClasses}>{excerpt}</p>}

    <div class="mt-auto pt-4">
      <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
        <div class="flex items-center space-x-3">
          <div class="flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            <span>{post.data.author}</span>
          </div>

          <time datetime={post.data.pubDate.toISOString()} class="flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {formatDate(post.data.pubDate, lang)}
          </time>
        </div>

        {'readingTime' in post.data && (
          <div class="flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>{post.data.readingTime}</span>
          </div>
        )}
      </div>

      <div class="mt-4">
        <a href={postUrl} class="inline-flex items-center justify-center px-4 py-2 bg-primary-600 hover:bg-primary-700 dark:bg-primary-500 dark:hover:bg-primary-600 text-white font-medium text-sm rounded-lg transition-all duration-200 hover:shadow-lg hover:scale-105 group" aria-label={`${t("blog.readMoreAbout")} ${post.data.title}`}>
          {t("blog.readMore")}
          <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
    </div>
  </div>
</article>

<style>
  .stretched-link::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    content: "";
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
