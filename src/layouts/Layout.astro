---
import { ViewTransitions } from "astro:transitions";
<<<<<<< HEAD
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import SEO from "@/components/SEO.astro";
=======
import Header from "@/components/navigation/Header.astro";
import Footer from "@/components/footer/Footer.astro";
import SEO from "@/components/common/SEO.astro";
import BackToTop from "@/components/ui/BackToTop.astro";
import ThemeInitializer from "@/components/common/ThemeInitializer.astro";
import BackToTopScript from "@/components/common/BackToTopScript.astro";
>>>>>>> 771a0a126f0221d7e2dd9bd0103257e8679d9d92
import "@/styles/global.css";

export interface Props {
  title: string;
  description?: string;
  image?: string;
  noindex?: boolean;
  lang?: string;
  canonical?: string;
}

const {
  title,
  description = "A modern multi-language blog built with Astro.js",
  image,
  noindex = false,
  lang = "en",
  canonical,
} = Astro.props;
---

<!doctype html>
<html
  lang={lang}
  class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content={description}
    />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
<<<<<<< HEAD
=======
    <link
      rel="icon"
      type="image/svg+xml"
      href="/favicon.svg"
    />
>>>>>>> 771a0a126f0221d7e2dd9bd0103257e8679d9d92
    <meta
      name="generator"
      content={Astro.generator}
    />

    <!-- Preconnect to external domains -->
    <link
      rel="preconnect"
      href="https://fonts.googleapis.com"
    />
    <link
      rel="preconnect"
      href="https://fonts.gstatic.com"
      crossorigin
    />

    <!-- Fonts -->
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=JetBrains+Mono:wght@400;500;600&display=swap"
      rel="stylesheet"
    />

    <!-- SEO Component -->
    <SEO
      title={title}
      description={description}
      image={image}
      noindex={noindex}
      canonical={canonical}
      lang={lang}
    />
<<<<<<< HEAD

    <!-- Theme Script (load early to prevent flash) -->
    <script is:inline>
      // Theme initialization
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };

      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        localStorage.setItem("theme", isDark ? "dark" : "light");
      }
    </script>

=======
    <ThemeInitializer />
>>>>>>> 771a0a126f0221d7e2dd9bd0103257e8679d9d92
    <ViewTransitions />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/favicon.svg"
    />
  </head>
  <body
    class="bg-white dark:bg-slate-900 text-slate-900 dark:text-white transition-colors duration-300">
<<<<<<< HEAD
    <div class="min-h-screen flex flex-col">
      <Header />

      <main class="flex-1 pt-16">
        <slot />
      </main>

      <Footer />
    </div>

    <!-- Theme toggle functionality -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const themeToggle = document.getElementById("theme-toggle");

        if (themeToggle) {
          themeToggle.addEventListener("click", () => {
            const isDark = document.documentElement.classList.contains("dark");
            const newTheme = isDark ? "light" : "dark";

            document.documentElement.classList.toggle("dark");
            localStorage.setItem("theme", newTheme);
          });
        }

        // System theme preference change listener
        window
          .matchMedia("(prefers-color-scheme: dark)")
          .addEventListener("change", (e) => {
            if (!localStorage.getItem("theme")) {
              document.documentElement.classList[e.matches ? "add" : "remove"](
                "dark"
              );
            }
          });
      });
    </script>
=======
    <div class="md:min-h-full lg:min-h-screen flex flex-col">
      <Header />
      <main class="flex-1 pt-16">
        <slot />
      </main>
      <Footer />
    </div>
    <BackToTop />
    <BackToTopScript />
>>>>>>> 771a0a126f0221d7e2dd9bd0103257e8679d9d92
  </body>
</html>
