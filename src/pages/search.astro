---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { useTranslations } from "@/i18n/utils";
import type { LanguageKey } from "@/i18n/types";

import SearchPageHeader from "@/components/search/SearchPageHeader.astro";
import SearchInputForm from "@/components/search/SearchInputForm.astro";
import SearchFilters from "@/components/search/SearchFilters.astro";
import SearchResults from "@/components/search/SearchResults.astro";

// Get all English blog posts for search
const allPostsUnsorted = await getCollection(
  "blog",
  ({ id, data }: CollectionEntry<"blog">) => {
    return id.startsWith("en/") && !data.draft;
  }
);

// This initial sort might be overridden by client-side sort, but good for no-JS/initial display
const posts = allPostsUnsorted.sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const lang = "en" as LanguageKey; // Hardcoded for this non-localized search page
const t = useTranslations(lang);

const allTags: string[] = [
  ...new Set(
    posts.flatMap((post: CollectionEntry<"blog">) => post.data.tags || [])
  ),
].sort() as string[];

const pageTitle = `${t("nav.search")} | Astro Batavia`;
const pageDescription =
  "Search through our collection of articles and find exactly what you're looking for";
const searchPageDescription =
  "Find articles, topics, and insights across our entire blog collection.";
const initialStatusText = `Enter a search term to find articles, or browse all ${posts.length} articles below.`;
---

<Layout
  title={pageTitle}
  description={pageDescription}
  lang={lang}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <SearchPageHeader
      title={t("nav.search")}
      description={searchPageDescription}
    />
    <SearchInputForm placeholder={t("search.placeholder")} />
    <SearchFilters tags={allTags} />
    <SearchResults
      posts={posts}
      lang={lang}
      noResultsText={t("search.no-results")}
      initialStatusText={initialStatusText}
    />
  </div>
</Layout>

<script>
  import { initializeSearchPage } from "@/features/search/searchClient";
  document.addEventListener("DOMContentLoaded", () => {
    initializeSearchPage();
  });
</script>
