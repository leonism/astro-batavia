export const prerender = true;
---
// src/pages/blog/[lang]/[...slug].astro
// This file catches incorrectly structured blog URLs like /blog/en/my-post
// and redirects them to the correct structure /en/blog/my-post

import { isValidLanguage } from '@/i18n/utils';

export const prerender = false; // Ensure this runs on the server for every request

export async function getStaticPaths() {
  return []; // For SSR routes with [...rest], Astro still expects this function.
}

const { lang, slug } = Astro.params;

// Validate the language parameter
if (lang && isValidLanguage(lang) && slug) {
  return Astro.redirect(`/${lang}/blog/${slug}`, 301); // 301 for permanent redirect
}

// If lang is invalid or slug is missing, redirect to a generic 404 or homepage
// For simplicity, redirecting to the base 404 page.
return Astro.redirect('/404', 302); // 302 as it's a temporary issue with the URL
---
